
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ЗагрузитьНастройкиСервиса(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СервисныйАккаунтПриИзменении(Элемент)
	ЗагрузитьНастройкиСервиса(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьФайлыБакета(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьФайлыБакетаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыборкаКаталогаДляСохранения", ЭтотОбъект, ДанныеВыбранногоФайла());
	ФайловаяСистемаКлиент.ВыбратьКаталог(Оповещение, НСтр("ru = 'Выбирете каталог для сохранения файла'", "ru")); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДиалогаПомещенияФайлов = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалогаПомещенияФайлов.Заголовок = НСтр("ru = 'Выбирете файл для загрузки'", "ru");
	ПараметрыДиалогаПомещенияФайлов.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеПомещенияФайлаНаСервер", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(Оповещение,,,, ПараметрыДиалогаПомещенияФайлов, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьФайлНаСервере(ДанныеВыбранногоФайла());
	ПоказатьОповещениеПользователя(НСтр("ru = 'Файл удален'", "ru"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСсылку(Команда)
	СсылкаНаФайл = ПолучитьСсылкуНаСервере(ДанныеВыбранногоФайла());
	ОбщегоНазначенияКлиент.СообщитьПользователю(СсылкаНаФайл);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьФайлыБакетаНаСервере()
	
	ФайлыБакета.Очистить();
	
	ПараметрыОбработки = S3_ОбъектноеХранилище.НовыйПараметрыПолученияФайловБакета();
	ПараметрыОбработки.Бакет = Бакет;
	
	ФайлыБакетаХранилища = S3_ОбъектноеХранилище.ПолучитьФайлыБакета(ПараметрыОбработки, НастройкиСервиса);
	
	Для Каждого Файл Из ФайлыБакетаХранилища Цикл
		
		ДанныеФайла = ФайлыБакета.Добавить();
		
		ДанныеФайла.ИмяФайла = Файл.Ключ;
		ДанныеФайла.ДатаИзменения = Файл.ДатаИзменения;
		ДанныеФайла.РазмерФайла = Файл.Размер;
		ДанныеФайла.Расширение = Файл.Расширение;
		
		ЧастиИмени = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ДанныеФайла.ИмяФайла);
		ДанныеФайла.Наименование = ЧастиИмени.ИмяБезРасширения;
		
		ИндексКартинки = РаботаСФайламиСлужебныйКлиентСервер.ПолучитьИндексПиктограммыФайла(ДанныеФайла.Расширение);
		
		Если ИндексКартинки = 0 Тогда
			ДанныеФайла.ИндексКартинки = 2;
		Иначе
			ДанныеФайла.ИндексКартинки = ИндексКартинки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыборкаКаталогаДляСохранения(ПутьККаталогу, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ПутьККаталогу) Тогда
		Возврат;
	КонецЕсли;
	
	КлючОбъекта = ДополнительныеПараметры.КлючОбъекта;
	Расширение  = ДополнительныеПараметры.Расширение;
	
	ДанныеФайла = ФайлИзХранилища(КлючОбъекта, Расширение);
	
	Если ТипЗнч(ДанныеФайла) = Тип("ДвоичныеДанные")
		И ЗначениеЗаполнено(ДанныеФайла) Тогда
		
		ПолныйПуть = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(ПутьККаталогу, КлючОбъекта);
		ДанныеФайла.Записать(ПолныйПуть);
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Файл сохранен'", "ru"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФайлИзХранилища(КлючОбъекта, Расширение)
	
	ПараметрыОбработки = S3_ОбъектноеХранилище.НовыйПараметрыПолученияФайла();
	ПараметрыОбработки.Бакет       = Бакет;
	ПараметрыОбработки.КлючОбъекта = КлючОбъекта;
	
	Если Не СтрНачинаетсяС(Расширение, ".") Тогда
		РасширениеСТочкой = "." + Расширение;
	Иначе
		РасширениеСТочкой = Расширение;
	КонецЕсли;
	
	ПараметрыОбработки.Расширение = РасширениеСТочкой;
	
	Возврат S3_ОбъектноеХранилище.ПолучитьФайл(ПараметрыОбработки, НастройкиСервиса);
	
КонецФункции

&НаКлиенте
Процедура ПослеПомещенияФайлаНаСервер(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	
	Если ОписаниеПомещенногоФайла <> Неопределено
		И Не ОписаниеПомещенногоФайла.ПомещениеФайлаОтменено Тогда
		ЗагрузитьФайлНаСервере(ОписаниеПомещенногоФайла.Адрес, ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Файл загружен'", "ru"));
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайлНаСервере(Адрес, КлючОбъекта)
	
	ПараметрыОбработки = S3_ОбъектноеХранилище.НовыйПараметрыЗагрузкиФайла();
	ПараметрыОбработки.Бакет       = Бакет;
	ПараметрыОбработки.КлючОбъекта = КлючОбъекта;
	ПараметрыОбработки.ДанныеФайла = ПолучитьИзВременногоХранилища(Адрес);
	
	S3_ОбъектноеХранилище.ЗагрузитьФайл(ПараметрыОбработки, НастройкиСервиса);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлНаСервере(ДанныеФайла)
	
	ПараметрыОбработки = S3_ОбъектноеХранилище.НовыйПараметрыУдаленияФайла();
	ПараметрыОбработки.Бакет       = Бакет;
	ПараметрыОбработки.КлючОбъекта = ДанныеФайла.КлючОбъекта;
	
	S3_ОбъектноеХранилище.УдалитьФайл(ПараметрыОбработки, НастройкиСервиса);
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеВыбранногоФайла()
	
	ТекущиеДанные = Элементы.ФайлыБакета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Необходимо выбрать файл.'", "ru");
	КонецЕсли;
	
	ДанныеВыбранногоФайла = Новый Структура;
	ДанныеВыбранногоФайла.Вставить("КлючОбъекта", ТекущиеДанные.ИмяФайла);
	ДанныеВыбранногоФайла.Вставить("Расширение", ТекущиеДанные.Расширение);
	
	Возврат ДанныеВыбранногоФайла;
	
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаСервере(ДанныеФайла)
	
	ПараметрыОбработки = S3_ОбъектноеХранилище.НовыйПараметрыПолученияСсылки();
	ПараметрыОбработки.Бакет       = Бакет;
	ПараметрыОбработки.КлючОбъекта = ДанныеФайла.КлючОбъекта;
	ПараметрыОбработки.ВремяЖизниСсылки = 300;
	
	Возврат S3_ОбъектноеХранилище.ПолучитьСсылку(ПараметрыОбработки, НастройкиСервиса);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗагрузитьНастройкиСервиса(Форма)
	
	Если ЗначениеЗаполнено(Форма.СервисныйАккаунт) Тогда
		Форма.НастройкиСервиса = НастройкиСервиса(Форма.СервисныйАккаунт);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиСервиса(СервисныйАккаунт)
	Возврат S3_ОбъектноеХранилище.НастройкиСервисногоАккаунта(СервисныйАккаунт);
КонецФункции

#КонецОбласти
















